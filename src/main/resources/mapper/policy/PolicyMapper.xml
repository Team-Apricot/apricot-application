<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sandbox.apricot.policy.mapper.PolicyMapper">

  <resultMap id="DistrictPolicyResultMap" type="DistrictPolicy">
    <id property="districtName" column="DISTRICT_NAME"/>
    <result property="policyCnt" column="POLICY_CNT"/>
  </resultMap>

  <resultMap id="PolicyInfoResultMap" type="sandbox.apricot.policy.dto.response.PolicyInfo">
    <result property="policyCode" column="POLICY_CODE"/>
    <result property="districtName" column="DISTRICT_NAME"/>
    <result property="policyName" column="POLICY_NAME"/>
    <result property="prdRpttSecd" column="PRD_RPTT_SECD"/>
    <result property="districtLogoPath" column="DISTRICT_LOGO_PATH"/>
  </resultMap>

  <select id="getPolicyCountByDistrict" resultMap="DistrictPolicyResultMap">
    SELECT d.DISTRICT_NAME AS DISTRICT_NAME,
           COUNT(*) AS POLICY_CNT
    FROM YOUTH_POLICY_DETAIL y
    JOIN districts d ON y.DISTRICT_CODE = d.DISTRICT_CODE
    GROUP BY d.DISTRICT_CODE, d.DISTRICT_NAME
  </select>

  <select id="countPoliciesByDistrict" resultType="int">
    SELECT COUNT(*)
    FROM YOUTH_POLICY_DETAIL
    WHERE DISTRICT_CODE = #{districtCode}
       OR (#{districtCode} BETWEEN '01' AND '25' AND DISTRICT_CODE = '26')
  </select>

  <select id="findByDistrictCode" resultType="District">
    SELECT DISTRICT_CODE, DISTRICT_NAME, DISTRICT_LOGO_PATH, DISTRICT_SLOGAN
    FROM DISTRICTS
    WHERE DISTRICT_CODE = #{districtCode}
  </select>

  <select id="findAllDistrictPolicyTLDRByCategory" resultType="PolicyTLDR">
    SELECT
    ROW_NUMBER() OVER (ORDER BY
    CASE
    WHEN DISTRICT_CODE = '26' THEN 1
    ELSE 0
    END,
    POLICY_START_DATE DESC NULLS FIRST) AS CURSOR_ID,
    POLICY_CODE,
    POLICY_NAME,
    POLICY_CONTENT,
    PRD_RPTT_SECD
    FROM YOUTH_POLICY_DETAIL
    WHERE (DISTRICT_CODE = #{districtCode} OR (#{districtCode} BETWEEN '01' AND '25' AND DISTRICT_CODE = '26'))
    <if test="categoryCode != null">
      AND CATEGORY_CODE = #{categoryCode}
    </if>
    ORDER BY
    CASE
    WHEN DISTRICT_CODE = '26' THEN 1
    ELSE 0
    END,
    POLICY_START_DATE DESC NULLS FIRST
    OFFSET #{pageable.offset} ROWS FETCH NEXT #{pageable.pageSize} ROWS ONLY
  </select>

  <select id="countPolicies" resultType="int">
        <![CDATA[
    SELECT COUNT(*)
    FROM YOUTH_POLICY_DETAIL Y JOIN DISTRICTS D
                                    ON Y.DISTRICT_CODE = D.DISTRICT_CODE
    WHERE Y.POLICY_NAME LIKE '%'||#{searchName}||'%'
       OR Y.POLICY_CONTENT LIKE '%'||#{searchName}||'%'
    ]]>
    </select>

  <select id="findPolicyWithPagination" resultMap="PolicyInfoResultMap">
    <![CDATA[
    SELECT POLICY_CODE, POLICY_NAME, PRD_RPTT_SECD, DISTRICT_CODE, DISTRICT_NAME, DISTRICT_LOGO_PATH
    FROM (
           SELECT Y.POLICY_CODE, Y.POLICY_NAME, Y.PRD_RPTT_SECD, Y.DISTRICT_CODE, D.DISTRICT_NAME, D.DISTRICT_LOGO_PATH,
                  ROW_NUMBER() OVER (ORDER BY Y.POLICY_CODE) AS rn
           FROM YOUTH_POLICY_DETAIL Y
                  JOIN DISTRICTS D ON Y.DISTRICT_CODE = D.DISTRICT_CODE
           WHERE Y.POLICY_NAME LIKE '%' || #{searchName} || '%'
              OR Y.POLICY_CONTENT LIKE '%' || #{searchName} || '%'
         )
    WHERE rn > #{offset} AND rn <= #{limit}
    ]]>
</select>


  <insert id="saveReview">
    MERGE INTO REVIEWS r
    USING (
      SELECT #{policyCode} AS policy_code, #{memberId} AS member_id, #{policyDetailScore} AS policy_score FROM dual
    ) src
    ON (r.POLICY_CODE = src.policy_code AND r.MEMBER_ID = src.member_id)
    WHEN MATCHED THEN
      UPDATE SET r.POLICY_SCORE = src.policy_score
    WHEN NOT MATCHED THEN
      INSERT (POLICY_CODE, MEMBER_ID, POLICY_SCORE)
      VALUES (src.policy_code, src.member_id, src.policy_score)
  </insert>


</mapper>
