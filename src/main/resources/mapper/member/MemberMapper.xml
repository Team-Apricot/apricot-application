<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sandbox.apricot.member.mapper.MemberMapper">

  <resultMap id="MemberResultMap" type="Member">
    <id property="memberId" column="MEMBER_ID"/>
    <result property="email" column="EMAIL"/>
    <result property="nickName" column="NICK_NAME"/>
    <result property="password" column="PASSWORD"/>
    <result property="ageRange" column="AGE_RANGE"/>
    <result property="gender" column="GENDER"/>
    <result property="career" column="CAREER"/>
    <result property="marriedStatus" column="MARRIED_STATUS"/>
    <result property="numChild" column="NUM_CHILD"/>
    <result property="memberRole" column="MEMBER_ROLE"/>
  </resultMap>

  <resultMap id="MemberInfoResultMap" type="sandbox.apricot.member.dto.response.MemberInfo">
    <result property="email" column="EMAIL"/>
    <result property="nickName" column="NICK_NAME"/>
    <result property="ageRange" column="AGE_RANGE"/>
    <result property="gender" column="GENDER"/>
    <result property="career" column="CAREER"/>
    <result property="marriedStatus" column="MARRIED_STATUS"/>
    <result property="numChild" column="NUM_CHILD"/>
    <result property="memberRole" column="MEMBER_ROLE"/>
    <collection property="interests" ofType="java.lang.String">
      <result column="CATEGORY_NAME"/>
    </collection>
  </resultMap>

  <insert id="save" parameterType="Member" >
    INSERT INTO MEMBERS (EMAIL, NICK_NAME, PASSWORD, AGE_RANGE, GENDER, CAREER, MARRIED_STATUS, NUM_CHILD, MEMBER_ROLE)
    VALUES (#{email}, #{nickName}, #{password}, #{ageRange}, #{gender}, #{career}, #{marriedStatus}, #{numChild}, #{memberRole})
  </insert>

  <select id="findById" resultMap="MemberResultMap">
    SELECT MEMBER_ID, EMAIL, NICK_NAME, PASSWORD, AGE_RANGE, GENDER, CAREER, MARRIED_STATUS, NUM_CHILD, MEMBER_ROLE
    FROM MEMBERS
    WHERE MEMBER_ID = #{memberId}
  </select>

  <select id="findByEmail" resultMap="MemberResultMap">
    SELECT MEMBER_ID, EMAIL, NICK_NAME, PASSWORD, AGE_RANGE, GENDER, CAREER, MARRIED_STATUS, NUM_CHILD, MEMBER_ROLE
    FROM MEMBERS
    WHERE email = #{email}
  </select>

  <select id="findByNickName" resultMap="MemberResultMap">
    SELECT MEMBER_ID, email, NICK_NAME, PASSWORD, AGE_RANGE, GENDER, CAREER, MARRIED_STATUS, NUM_CHILD, MEMBER_ROLE
    FROM MEMBERS
    WHERE nick_name = #{nickName}
  </select>

  <select id="findByIdWithInterests" resultMap="MemberInfoResultMap">
    SELECT m.EMAIL, m.NICK_NAME, m.AGE_RANGE, m.GENDER, m.CAREER, m.MARRIED_STATUS, m.NUM_CHILD, m.MEMBER_ROLE,
           c.CATEGORY_NAME
    FROM MEMBERS m
    JOIN INTERESTS i ON m.MEMBER_ID = i.MEMBER_ID
    JOIN CATEGORIES c ON i.CATEGORY_ID = c.CATEGORY_ID
    WHERE m.MEMBER_ID = #{memberId}
  </select>

  <update id="updateNickNameById">
    UPDATE MEMBERS SET NICK_NAME = #{nickName}
    WHERE MEMBER_ID = #{memberId}
  </update>

  <update id="updateAgeRangeById">
    UPDATE MEMBERS SET AGE_RANGE = #{ageRange}
    WHERE MEMBER_ID = #{memberId}
  </update>

  <update id="updatePassword">
    UPDATE MEMBERS SET PASSWORD = #{password}
    WHERE MEMBER_ID = #{memberId}
  </update>

  <delete id="deleteById">
    DELETE FROM MEMBERS WHERE MEMBER_ID = #{memberId}
  </delete>

</mapper>
